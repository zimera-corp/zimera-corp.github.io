<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Engineering on Zimera Corporation</title>
    <link>/categories/software-engineering/</link>
    <description>Recent content in Software Engineering on Zimera Corporation</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Mar 2024 06:45:51 +0700</lastBuildDate>
    <atom:link href="/categories/software-engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mamba as Conda Replacement</title>
      <link>/posts/00019/</link>
      <pubDate>Tue, 12 Mar 2024 06:45:51 +0700</pubDate>
      <guid>/posts/00019/</guid>
      <description>&lt;h2 id=&#34;python-and-its-package---environment-management&#34;&gt;Python and Its Package - Environment Management&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://python.org&#34;&gt;Python&lt;/a&gt; has always been the first choice for many programming tasks. This - of course - debatable since some problems exist in Python world, but let me tell you, in &lt;a href=&#34;https://spectrum.ieee.org/the-top-programming-languages-2023&#34;&gt;IEEE Spectrum top programming languages&lt;/a&gt;, Python is the winner from &lt;em&gt;IEEE Spectrum&lt;/em&gt; and &lt;em&gt;Trending&lt;/em&gt; category while SQL beats it in &lt;em&gt;Job&lt;/em&gt; category.&lt;/p&gt;&#xA;&lt;p&gt;As a long time developer who use Python since release 2.x (I insist on using Python for the whole curriculum in &lt;a href=&#34;https://www.utdi.ac.id&#34;&gt;Universitas Teknologi Digital Indonesia&lt;/a&gt; back in 2004), currently I use &lt;a href=&#34;https://docs.anaconda.com/free/miniconda/index.html&#34;&gt;Miniconda&lt;/a&gt; a lot (with &lt;code&gt;conda&lt;/code&gt; as its package and environment manager). Conda is a beautiful piece of software of course. I use it to manage my package and create mine. Using it, I can create an environment with specific Python version and also its own packages. However, when I use it for my software with many packages, It runs quite slow. So, I start to look for a drop in replacement. There goes &lt;a href=&#34;https://mamba.readthedocs.io/en/latest/&#34;&gt;Mamba&lt;/a&gt;!. It comes with faster and better at resolving package dependencies. Here&amp;rsquo;s the reason why Mamba is faster and better from &lt;a href=&#34;https://github.com/mamba-org/mamba&#34;&gt;Mamba Github&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>SDKMan for Linux - Bash, Zsh, and Fish Shell</title>
      <link>/posts/00012/</link>
      <pubDate>Tue, 27 Jun 2023 12:02:01 +0700</pubDate>
      <guid>/posts/00012/</guid>
      <description>&lt;p&gt;If you are a developer, working mainly with Java, you will notice that so many things need to be done in order to install and stay updated with Java ecosystem and development tools. There&amp;rsquo;s a tool called &lt;a href=&#34;https://sdkman.io&#34;&gt;SDKMAN!&lt;/a&gt; which can be used to handle installation, configuration, remove, and update all those Java-base software easier. It can be used on major platform (Linux, Windows, Mac) and makes our live as (Java platform) developer easier. However, it doesn&amp;rsquo;t include support for &lt;a href=&#34;https://fishshell.com&#34;&gt;Fish Shell&lt;/a&gt; (yet). So, if you are Linux user and a happy Fish user, stay tuned for a guide to install and configure SDKMAN! for Fish.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Workaround for Compilation Result of TypeScript on import</title>
      <link>/posts/00009/</link>
      <pubDate>Mon, 27 Feb 2023 13:40:22 +0700</pubDate>
      <guid>/posts/00009/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.typescriptlang.org&#34;&gt;TypeScript&lt;/a&gt; is supertype of JavaScript, or for easier understanding, TypeScrirpt is JavaScript with syntax for types. It is now developed by Microsoft. It is a lovely programming language which tries to &amp;ldquo;patch&amp;rdquo; the flaws of JavaScript. TypeScript adds static typing to JavaScript, and as a static typing programming language it can be used to catch any errors before deployment (well, hopefully).&lt;/p&gt;&#xA;&lt;p&gt;TypeScript compilation result is JavaScript. Documentation is very complete and details, but one thing that I found confusing is how TypeScript treats &lt;em&gt;import&lt;/em&gt;. In the documentation, &lt;em&gt;import&lt;/em&gt; statement instructed to be written like this for relatif TypeScript file:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Flutter: Persiapan Lingkungan Pengembangan</title>
      <link>/posts/00008/</link>
      <pubDate>Thu, 09 Feb 2023 20:59:19 +0700</pubDate>
      <guid>/posts/00008/</guid>
      <description>&lt;p&gt;Flutter adalah software framework yang digunakan untuk membangun native mobile app. Jika biasanya pemrogram membangun peranti khusus dari OS mobile yang berbeda-beda (Java/Kotlin/Scala untuk Android, Objective C/Swift untuk iOS), kali ini Flutter dimaksudkan untuk membangun aplikasi untuk 3 platform yang berbeda: Android, iOS, dan Fuchsia (belum rilis) dengan satu codebase yang sama. Tentu saja yang dikerjakan oleh Flutter ini bukan hal yang pertama kali, sebelumnya sudah ada &lt;a href=&#34;https://reactnative.dev/&#34;&gt;React Native&lt;/a&gt;, &lt;a href=&#34;https://nativescript.org/&#34;&gt;NativeScript&lt;/a&gt;, maupun &lt;a href=&#34;https://www.lambdanative.org/&#34;&gt;LambdaNative&lt;/a&gt;. Flutter sudah mencapai versi stabil pada bulan Desember 2018. Saat ini (2023), Flutter sudah berada pada versi 3.7.1.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Polyglot Programming dan GraalVM</title>
      <link>/posts/00005/</link>
      <pubDate>Mon, 23 Jan 2023 10:17:08 +0700</pubDate>
      <guid>/posts/00005/</guid>
      <description>&lt;p&gt;Pernahkah mendengar istilah polyglot programming? Istilah ini sudah menjadi istilah yang umum dan barangkali banyak didengar oleh para developer yang sehari-hari memang berkutat dengan bahasa pemrograman dan peranti pengembangan. Polyglot programming merupakan penggunaan lebih dari satu bahasa pemrograman untuk menyelesaikan suatu masalah pemrograman. Kategori polyglot programming antara lain adalah:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Penggunaan binding yang dibuat menggunakan suatu bahasa pemrograman tertentu (biasanya bahasa pemrograman aras sistem â€” atau aras rendah seperti C/C++, Assembly, Rust) ke suatu bahasa yang berada pada aras tinggi seperti Ruby, Python, dan lain-lain. Cara ini biasanya ditempuh untuk optimasi atau memang memerlukan function / procedure / library yang tidak ada di bahasa yang bersangkutan. Contoh: wxPython merupakan binding wxwidgets untuk Python untuk keperluan pembuatan aplikasi GUI.&lt;/li&gt;&#xA;&lt;li&gt;Fasilitas untuk mengeksekusi script / source code pada suatu bahasa tertentu. Contoh dari hal ini adalah Julia yang memungkinkan mengeksekusi source code Python sehingga memungkinkan akses terhadap banyak pustaka Python. Eksekusi ini biasanya dilakukan pada execution context yang berbeda.&lt;/li&gt;&#xA;&lt;li&gt;Penggunaan virtual machine bytecode yang bisa di-share oleh berbagai bahasa yang mendukung virtual machine tersebut. Contoh dari hal ini adalah JVM (Java Virtual Machine) yang secara default memerlukan bahasa pemrograman Java untuk menghasilkan bytecode .class. File-file bytecode tersebut bisa dibaca dan digunakan oleh bahasa lainnya yang dibuat pada JVM (misalnya Kotlin, Scala, Eta, Frege, dan lain-lain). Contoh lainnya ada pada CLR di dunia .NET yang bisa digunakan oleh berbagai bahasa seperti C#, F#, dan lain-lain. Jadi, dengan cara ini, bytecode merupakan tujuan akhir dan antar bahasa pemrograman bisa terjadi interoperabilitas karena memang berjalan pada VM yang sama dan bisa mengenali bytecode tersebut: source code harus dikompilasi terlebih dahulu untuk menghasilkan bytecode yang bisa memungkinkan interoperabilitas (sebagai contoh, Kotlin bisa mengakses berbagai file .jar di repo Maven yang dihasilkan oleh Java).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;GraalVM merupakan hasil riset dari Oracle (berbasis JDK) yang bertujuan untuk memungkinkan menggunakan berbagai bahasa dalam satu execution context di atas VM tanpa melalui proses kompilasi ke bytecode. Jadi, bisa saja menggunakan Python (salah satu bahasa yang didukung oleh GraalVM) dan source code Python kita mengakses pustaka standar di NodeJS. Lebih lanjut, hasil dari source code bisa dikompilasi menjadi native images yang mempunyai waktu eksekusi lebih cepat daripada bytecode VM. Menarik? mari kita coba.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Idiomatic Programming</title>
      <link>/posts/00004/</link>
      <pubDate>Mon, 16 Jan 2023 10:15:26 +0700</pubDate>
      <guid>/posts/00004/</guid>
      <description>&lt;p&gt;Salah satu hal yang menghambat orang untuk belajar adalah banyaknya istilah-istilah yang membingungkan. Semua domain pengetahuan biasanya memang mempunyai istilah-istilah sendiri dan meskipun ada satu istilah yang muncul di lebih dari satu domain pengetahuan, pengertiannya seringkali tidak sama sehingga pemahaman tentang istilah bersifat context-dependent (harus dilihat konteksnya).&lt;/p&gt;&#xA;&lt;p&gt;Mempelajari pemrograman juga kurang lebih harus memahami berbagai macam istilah yang muncul. Kali ini saya akan menjelaskan sedikit tentang istilah &lt;em&gt;idiomatic programming&lt;/em&gt;. Jika anda sering membaca &lt;em&gt;mailing list&lt;/em&gt;, &lt;em&gt;newsgroup&lt;/em&gt;, atau berbagai macam &lt;em&gt;resources&lt;/em&gt; di Internet, terutama yang terkait dengan pemrograman, barangkali akan sering mendengar istilah-istilah berikut:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Managing a Software Development Team: Some Experiences</title>
      <link>/posts/00003/</link>
      <pubDate>Sun, 15 Jan 2023 10:14:33 +0700</pubDate>
      <guid>/posts/00003/</guid>
      <description>&lt;p&gt;Managing a software development team is never an easy task. It consists of 2 sides:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;technical things&lt;/li&gt;&#xA;&lt;li&gt;non-technical things.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;This task is often assigned to the project manager, VP Engineering, Software Development Manager, etc. To be succeed, one has to consider those 2 sides. In this article, I will ouline some of my experiences in managing a software development team. This list is not meant to be complete nor perfect. You may need more but at least you will be in the safety line level one if you do care with these issues.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Agile Development: Welcome Changing Requirements?</title>
      <link>/posts/00002/</link>
      <pubDate>Sat, 14 Jan 2023 10:13:33 +0700</pubDate>
      <guid>/posts/00002/</guid>
      <description>&lt;p&gt;If you ever being in a team which practices agile software development, you might already heard about how a software development team &amp;ldquo;welcome chnging requirements&amp;rdquo;. While it sounds great, I personally think, if this statement is not properly explained, the impact will be negative on the development team side. Now, let&amp;rsquo;s see the complete statement:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Welcome changing requirements, even late in development. Agile processes harness change for the customerâ€™s competitive advantage.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Core Values for Software Developer</title>
      <link>/posts/00001/</link>
      <pubDate>Fri, 13 Jan 2023 10:11:27 +0700</pubDate>
      <guid>/posts/00001/</guid>
      <description>&lt;p&gt;So you are interested in software development and want to become one who do that job. Initially you think that itâ€™s only a matter of coding. creating source code, have them compiled, and then deploy the software for the customer/client. Later on, you realize that developing software is hard. Even harder since so many things beyond technical issues are also involved. Suddenly you realize that what you have learned in school is not enough. Well, it is almost impossible for university to deal with this advancement in technology, but instead they should work hard to cultivate core values of software developer: how one can survive as software developer?&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
